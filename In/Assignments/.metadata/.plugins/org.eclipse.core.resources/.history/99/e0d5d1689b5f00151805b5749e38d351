import uchicago.src.sim.gui.Drawable;
import uchicago.src.sim.gui.SimGraphics;
import uchicago.src.sim.space.Object2DGrid;

import java.awt.Color;


/**
 * Class that implements the simulation agent for the rabbits grass simulation.

 * @author
 */

public class RabbitsGrassSimulationAgent implements Drawable {
	
	private int x;
	private int y;
	private int vX; //velocity in direction X
	private int vY; //velocity in direction Y
	private int grass;
	private int stepsToLive;
	private static int IDNumber = 0;
	private int ID;
	private RabbitsGrassSimulationSpace rgsSpace;
	
	public RabbitsGrassSimulationAgent(int minLifespan, int maxLifespan)
	{
		x = -1;
		y = -1;
		grass = 0;
		setVxVy();
		stepsToLive = (int)((Math.random() * (maxLifespan - minLifespan)) + minLifespan);
		IDNumber++;
		ID = IDNumber;
	}
	
	private void setVxVy()
	{
		vX = 1;
		vY = 1;
		while((vX == 0) && (vY == 0))
		{
			vX = (int)Math.floor(Math.random() * 3) - 1;
			vY = (int)Math.floor(Math.random() * 3) -1;
		}
	}
	
	public void setXY(int newX, int newY)
	{
		x = newX;
		y = newY;
	}
	
	public void setRabbitsGrassSimulationSpace(RabbitsGrassSimulationSpace rgs)
	{
		rgsSpace = rgs;
	}
	
	public String getID()
	{
		return "A-" + ID;
		
	}
	
	public int getGrass()
	{
		return grass;
	}
	
	public int getStepsToLive()
	{
		return stepsToLive;
	}
	
	public void report()
	{
		System.out.println(getID() + " at " + x + ", " + y + " has " + getGrass() + " dollars and " + getStepsToLive() + " steps to live."); 
	}
	
	public void draw(SimGraphics G) {
		// TODO Auto-generated method stub
		//draw agents
		if(stepsToLive > 10)
			G.drawFastRoundRect(Color.white);
		else
			G.drawFastRoundRect(Color.blue);
	}

	public int getX() {
		// TODO Auto-generated method stub
		return x;
	}

	public int getY() {
		// TODO Auto-generated method stub
		return y;
	}
	
	public void step()
	{
		int newX = x + vX;
		int newY = y + vY;
		
		Object2DGrid grid = rgsSpace.getCurrentAgentSpace();
		newX = (newX + grid.getSizeX()) % grid.getSizeX();
		newY = (newY + grid.getSizeY()) % grid.getSizeY();
		
		if(tryMove(newX, newY))
		{
			grass += rgsSpace.takeGrassAt(x, y);
		}
		else
		{
			RabbitsGrassSimulationAgent rgsa = rgsSpace.getAgentAt(newX,newY);
			if(rgsa != null)
			{
				if(grass > 0)
				{
					rgsa.receiveGrass(1);
					grass--;
				}
			}
			setVxVy();
		}
		stepsToLive--;
	}
	
	private boolean tryMove(int newX, int newY)
	{
		return rgsSpace.moveAgentAt(x,y,newX,newY);
	}
	
	public void receiveGrass(int amount)
	{
		grass += amount;
	}
}
