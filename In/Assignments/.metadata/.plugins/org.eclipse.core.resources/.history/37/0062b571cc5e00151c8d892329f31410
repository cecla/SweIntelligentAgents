import uchicago.src.sim.engine.Schedule;
import uchicago.src.sim.engine.SimModelImpl;
import uchicago.src.sim.gui.DisplaySurface;
import uchicago.src.sim.gui.ColorMap;
import uchicago.src.sim.gui.Value2DDisplay;

import java.awt.Color;

/**
 * Class that implements the simulation model for the rabbits grass
 * simulation.  This is the first class which needs to be setup in
 * order to run Repast simulation. It manages the entire RePast
 * environment and the simulation.
 *
 * @author 
 */


public class RabbitsGrassSimulationModel extends SimModelImpl {	
	//Schedule-object schedule-var
	private Schedule schedule;
	//must create get and set methods for each parameter in the list
	
	//Default values
	private static final int NUMAGENTS = 100;
	private static final int WORLDXSIZE = 40;
	private static final int WORLDYSIZE = 40;
	private static final int TOTALMONEY = 1000;
	
	
	private int numAgents = NUMAGENTS;
	private int worldXSize = WORLDXSIZE;
	private int worldYSize = WORLDYSIZE;
	private int money = TOTALMONEY;
	
	private RabbitsGrassSimulationSpace cdSpace;
	
	private DisplaySurface displaySurf;
	
		public static void main(String[] args) 
		{
			
			System.out.println("Rabbit skeleton");
			
		}

		public void begin() {
			// TODO Auto-generated method stub
			buildModel();
			buildSchedule();
			buildDisplay();
			
		}
		
		public void buildModel()
		{
			System.out.println("Running BuildModel");
			cdSpace = new RabbitsGrassSimulationSpace(worldXSize, worldYSize);
			cdSpace.spreadMoney(money);
		}
		
		public void buildSchedule()
		{
			System.out.println("Running buildSchedule");
		}
		
		public void buildDisplay()
		{
			System.out.println("Running BuildDisplay");
			
			ColorMap map = new ColorMap();
			
			for(int i = 1; i < 16; i++)
			{
				map.mapColor(i, new Color((int)(i * 8 + 127), 0, 0));
			}
			map.mapColor(0, Color.white);
			
			Value2DDisplay displayMoney = new Value2DDisplay(cdSpace.getCurrentMoneySpace(), map);
			
			displaySurf.addDisplayable(displayMoney, "Money");
		}

		public String[] getInitParam() {
			// TODO Auto-generated method stub
			String[] initParams = {"NumAgents", "WorldXSize", "WorldYSize", "Money"};
			return initParams;
		}

		public String getName() {
			// TODO Auto-generated method stub
			return "Our awesome swedish model";
		}

		public Schedule getSchedule() {
			// TODO Auto-generated method stub
			
			return schedule;
		}

		public void setup() {
			// TODO Auto-generated method stub
			System.out.println("Running setup");
			cdSpace = null;
			
			if (displaySurf != null)
			{
				displaySurf.dispose();
			}
			displaySurf = null;
			
			displaySurf = new DisplaySurface(this, "Awesome Window Model 1");
			
			registerDisplaySurface("Awesome Window model 1", displaySurf);

		}
		
		public int getNumAgents()
		{
			return numAgents;
		}
		
		public void setNumAgents(int na)
		{
			numAgents = na;
		}
		
		public int getWorldXSize()
		{
			return worldXSize;
		}
		
		public void setWorldXSize(int wxs)
		{
			worldXSize = wxs;
		}
		
		public int getWorldYSize()
		{
			return worldYSize;
		}
		
		public void setWorldYSize(int wys)
		{
			worldYSize = wys;
		}
		
		public int getMoney()
		{
			return money;
		}
		
		public void setMoney(int i)
		{
			money = i;
		}
}
